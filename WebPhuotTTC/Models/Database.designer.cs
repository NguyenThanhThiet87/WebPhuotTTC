#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebPhuotTTC.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WEB_PHUOT_TTC")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBAOHANH(BAOHANH instance);
    partial void UpdateBAOHANH(BAOHANH instance);
    partial void DeleteBAOHANH(BAOHANH instance);
    partial void InsertVAITRO(VAITRO instance);
    partial void UpdateVAITRO(VAITRO instance);
    partial void DeleteVAITRO(VAITRO instance);
    partial void InsertBINHLUAN(BINHLUAN instance);
    partial void UpdateBINHLUAN(BINHLUAN instance);
    partial void DeleteBINHLUAN(BINHLUAN instance);
    partial void InsertCHITIETDONHANG(CHITIETDONHANG instance);
    partial void UpdateCHITIETDONHANG(CHITIETDONHANG instance);
    partial void DeleteCHITIETDONHANG(CHITIETDONHANG instance);
    partial void InsertCHITIETGIOHANG(CHITIETGIOHANG instance);
    partial void UpdateCHITIETGIOHANG(CHITIETGIOHANG instance);
    partial void DeleteCHITIETGIOHANG(CHITIETGIOHANG instance);
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertGIAMGIA(GIAMGIA instance);
    partial void UpdateGIAMGIA(GIAMGIA instance);
    partial void DeleteGIAMGIA(GIAMGIA instance);
    partial void InsertGIAMGIA_SANPHAM(GIAMGIA_SANPHAM instance);
    partial void UpdateGIAMGIA_SANPHAM(GIAMGIA_SANPHAM instance);
    partial void DeleteGIAMGIA_SANPHAM(GIAMGIA_SANPHAM instance);
    partial void InsertHINHANH(HINHANH instance);
    partial void UpdateHINHANH(HINHANH instance);
    partial void DeleteHINHANH(HINHANH instance);
    partial void InsertKICHTHUOC(KICHTHUOC instance);
    partial void UpdateKICHTHUOC(KICHTHUOC instance);
    partial void DeleteKICHTHUOC(KICHTHUOC instance);
    partial void InsertLOAISANPHAM(LOAISANPHAM instance);
    partial void UpdateLOAISANPHAM(LOAISANPHAM instance);
    partial void DeleteLOAISANPHAM(LOAISANPHAM instance);
    partial void InsertMAUSAC(MAUSAC instance);
    partial void UpdateMAUSAC(MAUSAC instance);
    partial void DeleteMAUSAC(MAUSAC instance);
    partial void InsertNGUOIDUNG(NGUOIDUNG instance);
    partial void UpdateNGUOIDUNG(NGUOIDUNG instance);
    partial void DeleteNGUOIDUNG(NGUOIDUNG instance);
    partial void InsertNHOMSANPHAM(NHOMSANPHAM instance);
    partial void UpdateNHOMSANPHAM(NHOMSANPHAM instance);
    partial void DeleteNHOMSANPHAM(NHOMSANPHAM instance);
    partial void InsertQLSANPHAM(QLSANPHAM instance);
    partial void UpdateQLSANPHAM(QLSANPHAM instance);
    partial void DeleteQLSANPHAM(QLSANPHAM instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertTHUONGHIEU(THUONGHIEU instance);
    partial void UpdateTHUONGHIEU(THUONGHIEU instance);
    partial void DeleteTHUONGHIEU(THUONGHIEU instance);
    partial void InsertTRANGTHAI(TRANGTHAI instance);
    partial void UpdateTRANGTHAI(TRANGTHAI instance);
    partial void DeleteTRANGTHAI(TRANGTHAI instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WEB_PHUOT_TTCConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BAOHANH> BAOHANHs
		{
			get
			{
				return this.GetTable<BAOHANH>();
			}
		}
		
		public System.Data.Linq.Table<VAITRO> VAITROs
		{
			get
			{
				return this.GetTable<VAITRO>();
			}
		}
		
		public System.Data.Linq.Table<BINHLUAN> BINHLUANs
		{
			get
			{
				return this.GetTable<BINHLUAN>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this.GetTable<CHITIETDONHANG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETGIOHANG> CHITIETGIOHANGs
		{
			get
			{
				return this.GetTable<CHITIETGIOHANG>();
			}
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<GIAMGIA> GIAMGIAs
		{
			get
			{
				return this.GetTable<GIAMGIA>();
			}
		}
		
		public System.Data.Linq.Table<GIAMGIA_SANPHAM> GIAMGIA_SANPHAMs
		{
			get
			{
				return this.GetTable<GIAMGIA_SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<HINHANH> HINHANHs
		{
			get
			{
				return this.GetTable<HINHANH>();
			}
		}
		
		public System.Data.Linq.Table<KICHTHUOC> KICHTHUOCs
		{
			get
			{
				return this.GetTable<KICHTHUOC>();
			}
		}
		
		public System.Data.Linq.Table<LOAISANPHAM> LOAISANPHAMs
		{
			get
			{
				return this.GetTable<LOAISANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<MAUSAC> MAUSACs
		{
			get
			{
				return this.GetTable<MAUSAC>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this.GetTable<NGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<NHOMSANPHAM> NHOMSANPHAMs
		{
			get
			{
				return this.GetTable<NHOMSANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<QLSANPHAM> QLSANPHAMs
		{
			get
			{
				return this.GetTable<QLSANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<THUONGHIEU> THUONGHIEUs
		{
			get
			{
				return this.GetTable<THUONGHIEU>();
			}
		}
		
		public System.Data.Linq.Table<TRANGTHAI> TRANGTHAIs
		{
			get
			{
				return this.GetTable<TRANGTHAI>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAOHANH")]
	public partial class BAOHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBaoHanh;
		
		private string _ThongTinBH;
		
		private string _ThoiGianBH;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBaoHanhChanging(string value);
    partial void OnMaBaoHanhChanged();
    partial void OnThongTinBHChanging(string value);
    partial void OnThongTinBHChanged();
    partial void OnThoiGianBHChanging(string value);
    partial void OnThoiGianBHChanged();
    #endregion
		
		public BAOHANH()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBaoHanh", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBaoHanh
		{
			get
			{
				return this._MaBaoHanh;
			}
			set
			{
				if ((this._MaBaoHanh != value))
				{
					this.OnMaBaoHanhChanging(value);
					this.SendPropertyChanging();
					this._MaBaoHanh = value;
					this.SendPropertyChanged("MaBaoHanh");
					this.OnMaBaoHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThongTinBH", DbType="NVarChar(1024)")]
		public string ThongTinBH
		{
			get
			{
				return this._ThongTinBH;
			}
			set
			{
				if ((this._ThongTinBH != value))
				{
					this.OnThongTinBHChanging(value);
					this.SendPropertyChanging();
					this._ThongTinBH = value;
					this.SendPropertyChanged("ThongTinBH");
					this.OnThongTinBHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBH", DbType="NVarChar(15)")]
		public string ThoiGianBH
		{
			get
			{
				return this._ThoiGianBH;
			}
			set
			{
				if ((this._ThoiGianBH != value))
				{
					this.OnThoiGianBHChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBH = value;
					this.SendPropertyChanged("ThoiGianBH");
					this.OnThoiGianBHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAOHANH_SANPHAM", Storage="_SANPHAMs", ThisKey="MaBaoHanh", OtherKey="MaBaoHanh")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.BAOHANH = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.BAOHANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VAITRO")]
	public partial class VAITRO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaVaiTro;
		
		private string _TenVaiTro;
		
		private EntitySet<NGUOIDUNG> _NGUOIDUNGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVaiTroChanging(string value);
    partial void OnMaVaiTroChanged();
    partial void OnTenVaiTroChanging(string value);
    partial void OnTenVaiTroChanged();
    #endregion
		
		public VAITRO()
		{
			this._NGUOIDUNGs = new EntitySet<NGUOIDUNG>(new Action<NGUOIDUNG>(this.attach_NGUOIDUNGs), new Action<NGUOIDUNG>(this.detach_NGUOIDUNGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVaiTro", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaVaiTro
		{
			get
			{
				return this._MaVaiTro;
			}
			set
			{
				if ((this._MaVaiTro != value))
				{
					this.OnMaVaiTroChanging(value);
					this.SendPropertyChanging();
					this._MaVaiTro = value;
					this.SendPropertyChanged("MaVaiTro");
					this.OnMaVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenVaiTro", DbType="VarChar(30)")]
		public string TenVaiTro
		{
			get
			{
				return this._TenVaiTro;
			}
			set
			{
				if ((this._TenVaiTro != value))
				{
					this.OnTenVaiTroChanging(value);
					this.SendPropertyChanging();
					this._TenVaiTro = value;
					this.SendPropertyChanged("TenVaiTro");
					this.OnTenVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VAITRO_NGUOIDUNG", Storage="_NGUOIDUNGs", ThisKey="MaVaiTro", OtherKey="MaVaiTro")]
		public EntitySet<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this._NGUOIDUNGs;
			}
			set
			{
				this._NGUOIDUNGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.VAITRO = this;
		}
		
		private void detach_NGUOIDUNGs(NGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.VAITRO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BINHLUAN")]
	public partial class BINHLUAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSanPham;
		
		private int _ID;
		
		private System.DateTime _ThoiGian;
		
		private string _NoiDung;
		
		private int _SoSao;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnThoiGianChanging(System.DateTime value);
    partial void OnThoiGianChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnSoSaoChanging(int value);
    partial void OnSoSaoChanged();
    #endregion
		
		public BINHLUAN()
		{
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(1024)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoSao", DbType="Int NOT NULL")]
		public int SoSao
		{
			get
			{
				return this._SoSao;
			}
			set
			{
				if ((this._SoSao != value))
				{
					this.OnSoSaoChanging(value);
					this.SendPropertyChanging();
					this._SoSao = value;
					this.SendPropertyChanged("SoSao");
					this.OnSoSaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_BINHLUAN", Storage="_NGUOIDUNG", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_BINHLUAN", Storage="_SANPHAM", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDONHANG")]
	public partial class CHITIETDONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoLuong;
		
		private double _DonGia;
		
		private string _MaSanPham;
		
		private string _MaKichThuoc;
		
		private string _MaMau;
		
		private string _MaDonHang;
		
		private EntityRef<DONHANG> _DONHANG;
		
		private EntityRef<QLSANPHAM> _QLSANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(double value);
    partial void OnDonGiaChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnMaKichThuocChanging(string value);
    partial void OnMaKichThuocChanged();
    partial void OnMaMauChanging(string value);
    partial void OnMaMauChanged();
    partial void OnMaDonHangChanging(string value);
    partial void OnMaDonHangChanged();
    #endregion
		
		public CHITIETDONHANG()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			this._QLSANPHAM = default(EntityRef<QLSANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float NOT NULL")]
		public double DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._QLSANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKichThuoc", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKichThuoc
		{
			get
			{
				return this._MaKichThuoc;
			}
			set
			{
				if ((this._MaKichThuoc != value))
				{
					if (this._QLSANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKichThuocChanging(value);
					this.SendPropertyChanging();
					this._MaKichThuoc = value;
					this.SendPropertyChanged("MaKichThuoc");
					this.OnMaKichThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMau", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMau
		{
			get
			{
				return this._MaMau;
			}
			set
			{
				if ((this._MaMau != value))
				{
					if (this._QLSANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMauChanging(value);
					this.SendPropertyChanging();
					this._MaMau = value;
					this.SendPropertyChanged("MaMau");
					this.OnMaMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonHang", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDonHang
		{
			get
			{
				return this._MaDonHang;
			}
			set
			{
				if ((this._MaDonHang != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDonHangChanging(value);
					this.SendPropertyChanging();
					this._MaDonHang = value;
					this.SendPropertyChanged("MaDonHang");
					this.OnMaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDONHANG", Storage="_DONHANG", ThisKey="MaDonHang", OtherKey="MaDonHang", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MaDonHang = value.MaDonHang;
					}
					else
					{
						this._MaDonHang = default(string);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QLSANPHAM_CHITIETDONHANG", Storage="_QLSANPHAM", ThisKey="MaSanPham,MaKichThuoc,MaMau", OtherKey="MaSanPham,MaKichThuoc,MaMau", IsForeignKey=true)]
		public QLSANPHAM QLSANPHAM
		{
			get
			{
				return this._QLSANPHAM.Entity;
			}
			set
			{
				QLSANPHAM previousValue = this._QLSANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._QLSANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QLSANPHAM.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._QLSANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MaSanPham = value.MaSanPham;
						this._MaKichThuoc = value.MaKichThuoc;
						this._MaMau = value.MaMau;
					}
					else
					{
						this._MaSanPham = default(string);
						this._MaKichThuoc = default(string);
						this._MaMau = default(string);
					}
					this.SendPropertyChanged("QLSANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETGIOHANG")]
	public partial class CHITIETGIOHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoLuong;
		
		private double _DonGia;
		
		private string _MaSanPham;
		
		private string _MaKichThuoc;
		
		private string _MaMau;
		
		private int _ID;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
		private EntityRef<QLSANPHAM> _QLSANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(double value);
    partial void OnDonGiaChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnMaKichThuocChanging(string value);
    partial void OnMaKichThuocChanged();
    partial void OnMaMauChanging(string value);
    partial void OnMaMauChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public CHITIETGIOHANG()
		{
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			this._QLSANPHAM = default(EntityRef<QLSANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float NOT NULL")]
		public double DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._QLSANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKichThuoc", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKichThuoc
		{
			get
			{
				return this._MaKichThuoc;
			}
			set
			{
				if ((this._MaKichThuoc != value))
				{
					if (this._QLSANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKichThuocChanging(value);
					this.SendPropertyChanging();
					this._MaKichThuoc = value;
					this.SendPropertyChanged("MaKichThuoc");
					this.OnMaKichThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMau", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMau
		{
			get
			{
				return this._MaMau;
			}
			set
			{
				if ((this._MaMau != value))
				{
					if (this._QLSANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMauChanging(value);
					this.SendPropertyChanging();
					this._MaMau = value;
					this.SendPropertyChanged("MaMau");
					this.OnMaMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_CHITIETGIOHANG", Storage="_NGUOIDUNG", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.CHITIETGIOHANGs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.CHITIETGIOHANGs.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QLSANPHAM_CHITIETGIOHANG", Storage="_QLSANPHAM", ThisKey="MaSanPham,MaKichThuoc,MaMau", OtherKey="MaSanPham,MaKichThuoc,MaMau", IsForeignKey=true)]
		public QLSANPHAM QLSANPHAM
		{
			get
			{
				return this._QLSANPHAM.Entity;
			}
			set
			{
				QLSANPHAM previousValue = this._QLSANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._QLSANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QLSANPHAM.Entity = null;
						previousValue.CHITIETGIOHANGs.Remove(this);
					}
					this._QLSANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETGIOHANGs.Add(this);
						this._MaSanPham = value.MaSanPham;
						this._MaKichThuoc = value.MaKichThuoc;
						this._MaMau = value.MaMau;
					}
					else
					{
						this._MaSanPham = default(string);
						this._MaKichThuoc = default(string);
						this._MaMau = default(string);
					}
					this.SendPropertyChanged("QLSANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDonHang;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _MaTrangThai;
		
		private System.Nullable<double> _TongTien;
		
		private System.Nullable<int> _ID;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntityRef<NGUOIDUNG> _NGUOIDUNG;
		
		private EntityRef<TRANGTHAI> _TRANGTHAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonHangChanging(string value);
    partial void OnMaDonHangChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnMaTrangThaiChanging(System.Nullable<int> value);
    partial void OnMaTrangThaiChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    #endregion
		
		public DONHANG()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._NGUOIDUNG = default(EntityRef<NGUOIDUNG>);
			this._TRANGTHAI = default(EntityRef<TRANGTHAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonHang", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDonHang
		{
			get
			{
				return this._MaDonHang;
			}
			set
			{
				if ((this._MaDonHang != value))
				{
					this.OnMaDonHangChanging(value);
					this.SendPropertyChanging();
					this._MaDonHang = value;
					this.SendPropertyChanged("MaDonHang");
					this.OnMaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTrangThai", DbType="Int")]
		public System.Nullable<int> MaTrangThai
		{
			get
			{
				return this._MaTrangThai;
			}
			set
			{
				if ((this._MaTrangThai != value))
				{
					if (this._TRANGTHAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._MaTrangThai = value;
					this.SendPropertyChanged("MaTrangThai");
					this.OnMaTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._NGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MaDonHang", OtherKey="MaDonHang")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_DONHANG", Storage="_NGUOIDUNG", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public NGUOIDUNG NGUOIDUNG
		{
			get
			{
				return this._NGUOIDUNG.Entity;
			}
			set
			{
				NGUOIDUNG previousValue = this._NGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NGUOIDUNG.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._NGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NGUOIDUNG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANGTHAI_DONHANG", Storage="_TRANGTHAI", ThisKey="MaTrangThai", OtherKey="MaTrangThai", IsForeignKey=true)]
		public TRANGTHAI TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI.Entity;
			}
			set
			{
				TRANGTHAI previousValue = this._TRANGTHAI.Entity;
				if (((previousValue != value) 
							|| (this._TRANGTHAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRANGTHAI.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._TRANGTHAI.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._MaTrangThai = value.MaTrangThai;
					}
					else
					{
						this._MaTrangThai = default(Nullable<int>);
					}
					this.SendPropertyChanged("TRANGTHAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAMGIA")]
	public partial class GIAMGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGiamGia;
		
		private System.Nullable<double> _TiLeGiamGia;
		
		private string _NoiDungGiamGia;
		
		private System.Nullable<System.DateTime> _ThoiGianBatDau;
		
		private System.Nullable<System.DateTime> _ThoiGianKetThuc;
		
		private EntitySet<GIAMGIA_SANPHAM> _GIAMGIA_SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiamGiaChanging(string value);
    partial void OnMaGiamGiaChanged();
    partial void OnTiLeGiamGiaChanging(System.Nullable<double> value);
    partial void OnTiLeGiamGiaChanged();
    partial void OnNoiDungGiamGiaChanging(string value);
    partial void OnNoiDungGiamGiaChanged();
    partial void OnThoiGianBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBatDauChanged();
    partial void OnThoiGianKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianKetThucChanged();
    #endregion
		
		public GIAMGIA()
		{
			this._GIAMGIA_SANPHAMs = new EntitySet<GIAMGIA_SANPHAM>(new Action<GIAMGIA_SANPHAM>(this.attach_GIAMGIA_SANPHAMs), new Action<GIAMGIA_SANPHAM>(this.detach_GIAMGIA_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiamGia", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiamGia
		{
			get
			{
				return this._MaGiamGia;
			}
			set
			{
				if ((this._MaGiamGia != value))
				{
					this.OnMaGiamGiaChanging(value);
					this.SendPropertyChanging();
					this._MaGiamGia = value;
					this.SendPropertyChanged("MaGiamGia");
					this.OnMaGiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TiLeGiamGia", DbType="Float")]
		public System.Nullable<double> TiLeGiamGia
		{
			get
			{
				return this._TiLeGiamGia;
			}
			set
			{
				if ((this._TiLeGiamGia != value))
				{
					this.OnTiLeGiamGiaChanging(value);
					this.SendPropertyChanging();
					this._TiLeGiamGia = value;
					this.SendPropertyChanged("TiLeGiamGia");
					this.OnTiLeGiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungGiamGia", DbType="NVarChar(255)")]
		public string NoiDungGiamGia
		{
			get
			{
				return this._NoiDungGiamGia;
			}
			set
			{
				if ((this._NoiDungGiamGia != value))
				{
					this.OnNoiDungGiamGiaChanging(value);
					this.SendPropertyChanging();
					this._NoiDungGiamGia = value;
					this.SendPropertyChanged("NoiDungGiamGia");
					this.OnNoiDungGiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianBatDau
		{
			get
			{
				return this._ThoiGianBatDau;
			}
			set
			{
				if ((this._ThoiGianBatDau != value))
				{
					this.OnThoiGianBatDauChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBatDau = value;
					this.SendPropertyChanged("ThoiGianBatDau");
					this.OnThoiGianBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAMGIA_GIAMGIA_SANPHAM", Storage="_GIAMGIA_SANPHAMs", ThisKey="MaGiamGia", OtherKey="MaGiamGia")]
		public EntitySet<GIAMGIA_SANPHAM> GIAMGIA_SANPHAMs
		{
			get
			{
				return this._GIAMGIA_SANPHAMs;
			}
			set
			{
				this._GIAMGIA_SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIAMGIA_SANPHAMs(GIAMGIA_SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.GIAMGIA = this;
		}
		
		private void detach_GIAMGIA_SANPHAMs(GIAMGIA_SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.GIAMGIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAMGIA_SANPHAM")]
	public partial class GIAMGIA_SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSanPham;
		
		private string _MaGiamGia;
		
		private EntityRef<GIAMGIA> _GIAMGIA;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnMaGiamGiaChanging(string value);
    partial void OnMaGiamGiaChanged();
    #endregion
		
		public GIAMGIA_SANPHAM()
		{
			this._GIAMGIA = default(EntityRef<GIAMGIA>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiamGia", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiamGia
		{
			get
			{
				return this._MaGiamGia;
			}
			set
			{
				if ((this._MaGiamGia != value))
				{
					if (this._GIAMGIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiamGiaChanging(value);
					this.SendPropertyChanging();
					this._MaGiamGia = value;
					this.SendPropertyChanged("MaGiamGia");
					this.OnMaGiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAMGIA_GIAMGIA_SANPHAM", Storage="_GIAMGIA", ThisKey="MaGiamGia", OtherKey="MaGiamGia", IsForeignKey=true)]
		public GIAMGIA GIAMGIA
		{
			get
			{
				return this._GIAMGIA.Entity;
			}
			set
			{
				GIAMGIA previousValue = this._GIAMGIA.Entity;
				if (((previousValue != value) 
							|| (this._GIAMGIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAMGIA.Entity = null;
						previousValue.GIAMGIA_SANPHAMs.Remove(this);
					}
					this._GIAMGIA.Entity = value;
					if ((value != null))
					{
						value.GIAMGIA_SANPHAMs.Add(this);
						this._MaGiamGia = value.MaGiamGia;
					}
					else
					{
						this._MaGiamGia = default(string);
					}
					this.SendPropertyChanged("GIAMGIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_GIAMGIA_SANPHAM", Storage="_SANPHAM", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.GIAMGIA_SANPHAMs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.GIAMGIA_SANPHAMs.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HINHANH")]
	public partial class HINHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaAnh;
		
		private string _Url;
		
		private string _MaSanPham;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaAnhChanging(string value);
    partial void OnMaAnhChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    #endregion
		
		public HINHANH()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaAnh", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaAnh
		{
			get
			{
				return this._MaAnh;
			}
			set
			{
				if ((this._MaAnh != value))
				{
					this.OnMaAnhChanging(value);
					this.SendPropertyChanging();
					this._MaAnh = value;
					this.SendPropertyChanged("MaAnh");
					this.OnMaAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(512)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Char(5)")]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_HINHANH", Storage="_SANPHAM", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.HINHANHs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.HINHANHs.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KICHTHUOC")]
	public partial class KICHTHUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKichThuoc;
		
		private EntitySet<QLSANPHAM> _QLSANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKichThuocChanging(string value);
    partial void OnMaKichThuocChanged();
    #endregion
		
		public KICHTHUOC()
		{
			this._QLSANPHAMs = new EntitySet<QLSANPHAM>(new Action<QLSANPHAM>(this.attach_QLSANPHAMs), new Action<QLSANPHAM>(this.detach_QLSANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKichThuoc", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKichThuoc
		{
			get
			{
				return this._MaKichThuoc;
			}
			set
			{
				if ((this._MaKichThuoc != value))
				{
					this.OnMaKichThuocChanging(value);
					this.SendPropertyChanging();
					this._MaKichThuoc = value;
					this.SendPropertyChanged("MaKichThuoc");
					this.OnMaKichThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHTHUOC_QLSANPHAM", Storage="_QLSANPHAMs", ThisKey="MaKichThuoc", OtherKey="MaKichThuoc")]
		public EntitySet<QLSANPHAM> QLSANPHAMs
		{
			get
			{
				return this._QLSANPHAMs;
			}
			set
			{
				this._QLSANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QLSANPHAMs(QLSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.KICHTHUOC = this;
		}
		
		private void detach_QLSANPHAMs(QLSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.KICHTHUOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISANPHAM")]
	public partial class LOAISANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private string _MaNhom;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
		private EntityRef<NHOMSANPHAM> _NHOMSANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnMaNhomChanging(string value);
    partial void OnMaNhomChanged();
    #endregion
		
		public LOAISANPHAM()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			this._NHOMSANPHAM = default(EntityRef<NHOMSANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(60)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", DbType="Char(5)")]
		public string MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					if (this._NHOMSANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_SANPHAMs", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMSANPHAM_LOAISANPHAM", Storage="_NHOMSANPHAM", ThisKey="MaNhom", OtherKey="MaNhom", IsForeignKey=true)]
		public NHOMSANPHAM NHOMSANPHAM
		{
			get
			{
				return this._NHOMSANPHAM.Entity;
			}
			set
			{
				NHOMSANPHAM previousValue = this._NHOMSANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._NHOMSANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMSANPHAM.Entity = null;
						previousValue.LOAISANPHAMs.Remove(this);
					}
					this._NHOMSANPHAM.Entity = value;
					if ((value != null))
					{
						value.LOAISANPHAMs.Add(this);
						this._MaNhom = value.MaNhom;
					}
					else
					{
						this._MaNhom = default(string);
					}
					this.SendPropertyChanged("NHOMSANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAUSAC")]
	public partial class MAUSAC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMau;
		
		private string _TenMau;
		
		private EntitySet<QLSANPHAM> _QLSANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMauChanging(string value);
    partial void OnMaMauChanged();
    partial void OnTenMauChanging(string value);
    partial void OnTenMauChanged();
    #endregion
		
		public MAUSAC()
		{
			this._QLSANPHAMs = new EntitySet<QLSANPHAM>(new Action<QLSANPHAM>(this.attach_QLSANPHAMs), new Action<QLSANPHAM>(this.detach_QLSANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMau", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMau
		{
			get
			{
				return this._MaMau;
			}
			set
			{
				if ((this._MaMau != value))
				{
					this.OnMaMauChanging(value);
					this.SendPropertyChanging();
					this._MaMau = value;
					this.SendPropertyChanged("MaMau");
					this.OnMaMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMau", DbType="NVarChar(255)")]
		public string TenMau
		{
			get
			{
				return this._TenMau;
			}
			set
			{
				if ((this._TenMau != value))
				{
					this.OnTenMauChanging(value);
					this.SendPropertyChanging();
					this._TenMau = value;
					this.SendPropertyChanged("TenMau");
					this.OnTenMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAUSAC_QLSANPHAM", Storage="_QLSANPHAMs", ThisKey="MaMau", OtherKey="MaMau")]
		public EntitySet<QLSANPHAM> QLSANPHAMs
		{
			get
			{
				return this._QLSANPHAMs;
			}
			set
			{
				this._QLSANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QLSANPHAMs(QLSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.MAUSAC = this;
		}
		
		private void detach_QLSANPHAMs(QLSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.MAUSAC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOIDUNG")]
	public partial class NGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HoTen;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private string _MaVaiTro;
		
		private int _ID;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntitySet<CHITIETGIOHANG> _CHITIETGIOHANGs;
		
		private EntitySet<DONHANG> _DONHANGs;
		
		private EntityRef<VAITRO> _VAITRO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnMaVaiTroChanging(string value);
    partial void OnMaVaiTroChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public NGUOIDUNG()
		{
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._CHITIETGIOHANGs = new EntitySet<CHITIETGIOHANG>(new Action<CHITIETGIOHANG>(this.attach_CHITIETGIOHANGs), new Action<CHITIETGIOHANG>(this.detach_CHITIETGIOHANGs));
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			this._VAITRO = default(EntityRef<VAITRO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(30)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(15)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(70)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVaiTro", DbType="Char(3)")]
		public string MaVaiTro
		{
			get
			{
				return this._MaVaiTro;
			}
			set
			{
				if ((this._MaVaiTro != value))
				{
					if (this._VAITRO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaVaiTroChanging(value);
					this.SendPropertyChanging();
					this._MaVaiTro = value;
					this.SendPropertyChanged("MaVaiTro");
					this.OnMaVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_BINHLUAN", Storage="_BINHLUANs", ThisKey="ID", OtherKey="ID")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_CHITIETGIOHANG", Storage="_CHITIETGIOHANGs", ThisKey="ID", OtherKey="ID")]
		public EntitySet<CHITIETGIOHANG> CHITIETGIOHANGs
		{
			get
			{
				return this._CHITIETGIOHANGs;
			}
			set
			{
				this._CHITIETGIOHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NGUOIDUNG_DONHANG", Storage="_DONHANGs", ThisKey="ID", OtherKey="ID")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VAITRO_NGUOIDUNG", Storage="_VAITRO", ThisKey="MaVaiTro", OtherKey="MaVaiTro", IsForeignKey=true)]
		public VAITRO VAITRO
		{
			get
			{
				return this._VAITRO.Entity;
			}
			set
			{
				VAITRO previousValue = this._VAITRO.Entity;
				if (((previousValue != value) 
							|| (this._VAITRO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VAITRO.Entity = null;
						previousValue.NGUOIDUNGs.Remove(this);
					}
					this._VAITRO.Entity = value;
					if ((value != null))
					{
						value.NGUOIDUNGs.Add(this);
						this._MaVaiTro = value.MaVaiTro;
					}
					else
					{
						this._MaVaiTro = default(string);
					}
					this.SendPropertyChanged("VAITRO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
		
		private void attach_CHITIETGIOHANGs(CHITIETGIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_CHITIETGIOHANGs(CHITIETGIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.NGUOIDUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHOMSANPHAM")]
	public partial class NHOMSANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhom;
		
		private string _TenNhom;
		
		private EntitySet<LOAISANPHAM> _LOAISANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomChanging(string value);
    partial void OnMaNhomChanged();
    partial void OnTenNhomChanging(string value);
    partial void OnTenNhomChanged();
    #endregion
		
		public NHOMSANPHAM()
		{
			this._LOAISANPHAMs = new EntitySet<LOAISANPHAM>(new Action<LOAISANPHAM>(this.attach_LOAISANPHAMs), new Action<LOAISANPHAM>(this.detach_LOAISANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhom", DbType="NVarChar(50)")]
		public string TenNhom
		{
			get
			{
				return this._TenNhom;
			}
			set
			{
				if ((this._TenNhom != value))
				{
					this.OnTenNhomChanging(value);
					this.SendPropertyChanging();
					this._TenNhom = value;
					this.SendPropertyChanged("TenNhom");
					this.OnTenNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMSANPHAM_LOAISANPHAM", Storage="_LOAISANPHAMs", ThisKey="MaNhom", OtherKey="MaNhom")]
		public EntitySet<LOAISANPHAM> LOAISANPHAMs
		{
			get
			{
				return this._LOAISANPHAMs;
			}
			set
			{
				this._LOAISANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOAISANPHAMs(LOAISANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHOMSANPHAM = this;
		}
		
		private void detach_LOAISANPHAMs(LOAISANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHOMSANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QLSANPHAM")]
	public partial class QLSANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSanPham;
		
		private string _MaKichThuoc;
		
		private string _MaMau;
		
		private System.Nullable<int> _SoLuong;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntitySet<CHITIETGIOHANG> _CHITIETGIOHANGs;
		
		private EntityRef<KICHTHUOC> _KICHTHUOC;
		
		private EntityRef<MAUSAC> _MAUSAC;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnMaKichThuocChanging(string value);
    partial void OnMaKichThuocChanged();
    partial void OnMaMauChanging(string value);
    partial void OnMaMauChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public QLSANPHAM()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._CHITIETGIOHANGs = new EntitySet<CHITIETGIOHANG>(new Action<CHITIETGIOHANG>(this.attach_CHITIETGIOHANGs), new Action<CHITIETGIOHANG>(this.detach_CHITIETGIOHANGs));
			this._KICHTHUOC = default(EntityRef<KICHTHUOC>);
			this._MAUSAC = default(EntityRef<MAUSAC>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKichThuoc", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKichThuoc
		{
			get
			{
				return this._MaKichThuoc;
			}
			set
			{
				if ((this._MaKichThuoc != value))
				{
					if (this._KICHTHUOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKichThuocChanging(value);
					this.SendPropertyChanging();
					this._MaKichThuoc = value;
					this.SendPropertyChanged("MaKichThuoc");
					this.OnMaKichThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMau", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMau
		{
			get
			{
				return this._MaMau;
			}
			set
			{
				if ((this._MaMau != value))
				{
					if (this._MAUSAC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMauChanging(value);
					this.SendPropertyChanging();
					this._MaMau = value;
					this.SendPropertyChanged("MaMau");
					this.OnMaMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QLSANPHAM_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MaSanPham,MaKichThuoc,MaMau", OtherKey="MaSanPham,MaKichThuoc,MaMau")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QLSANPHAM_CHITIETGIOHANG", Storage="_CHITIETGIOHANGs", ThisKey="MaSanPham,MaKichThuoc,MaMau", OtherKey="MaSanPham,MaKichThuoc,MaMau")]
		public EntitySet<CHITIETGIOHANG> CHITIETGIOHANGs
		{
			get
			{
				return this._CHITIETGIOHANGs;
			}
			set
			{
				this._CHITIETGIOHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHTHUOC_QLSANPHAM", Storage="_KICHTHUOC", ThisKey="MaKichThuoc", OtherKey="MaKichThuoc", IsForeignKey=true)]
		public KICHTHUOC KICHTHUOC
		{
			get
			{
				return this._KICHTHUOC.Entity;
			}
			set
			{
				KICHTHUOC previousValue = this._KICHTHUOC.Entity;
				if (((previousValue != value) 
							|| (this._KICHTHUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KICHTHUOC.Entity = null;
						previousValue.QLSANPHAMs.Remove(this);
					}
					this._KICHTHUOC.Entity = value;
					if ((value != null))
					{
						value.QLSANPHAMs.Add(this);
						this._MaKichThuoc = value.MaKichThuoc;
					}
					else
					{
						this._MaKichThuoc = default(string);
					}
					this.SendPropertyChanged("KICHTHUOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAUSAC_QLSANPHAM", Storage="_MAUSAC", ThisKey="MaMau", OtherKey="MaMau", IsForeignKey=true)]
		public MAUSAC MAUSAC
		{
			get
			{
				return this._MAUSAC.Entity;
			}
			set
			{
				MAUSAC previousValue = this._MAUSAC.Entity;
				if (((previousValue != value) 
							|| (this._MAUSAC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAUSAC.Entity = null;
						previousValue.QLSANPHAMs.Remove(this);
					}
					this._MAUSAC.Entity = value;
					if ((value != null))
					{
						value.QLSANPHAMs.Add(this);
						this._MaMau = value.MaMau;
					}
					else
					{
						this._MaMau = default(string);
					}
					this.SendPropertyChanged("MAUSAC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_QLSANPHAM", Storage="_SANPHAM", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.QLSANPHAMs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.QLSANPHAMs.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.QLSANPHAM = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.QLSANPHAM = null;
		}
		
		private void attach_CHITIETGIOHANGs(CHITIETGIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.QLSANPHAM = this;
		}
		
		private void detach_CHITIETGIOHANGs(CHITIETGIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.QLSANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSanPham;
		
		private string _TenSanPham;
		
		private string _MoTa;
		
		private string _AnhBia;
		
		private int _Gia;
		
		private string _MaBaoHanh;
		
		private string _MaThuongHieu;
		
		private string _MaLoai;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntitySet<GIAMGIA_SANPHAM> _GIAMGIA_SANPHAMs;
		
		private EntitySet<HINHANH> _HINHANHs;
		
		private EntitySet<QLSANPHAM> _QLSANPHAMs;
		
		private EntityRef<BAOHANH> _BAOHANH;
		
		private EntityRef<LOAISANPHAM> _LOAISANPHAM;
		
		private EntityRef<THUONGHIEU> _THUONGHIEU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    partial void OnGiaChanging(int value);
    partial void OnGiaChanged();
    partial void OnMaBaoHanhChanging(string value);
    partial void OnMaBaoHanhChanged();
    partial void OnMaThuongHieuChanging(string value);
    partial void OnMaThuongHieuChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    #endregion
		
		public SANPHAM()
		{
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._GIAMGIA_SANPHAMs = new EntitySet<GIAMGIA_SANPHAM>(new Action<GIAMGIA_SANPHAM>(this.attach_GIAMGIA_SANPHAMs), new Action<GIAMGIA_SANPHAM>(this.detach_GIAMGIA_SANPHAMs));
			this._HINHANHs = new EntitySet<HINHANH>(new Action<HINHANH>(this.attach_HINHANHs), new Action<HINHANH>(this.detach_HINHANHs));
			this._QLSANPHAMs = new EntitySet<QLSANPHAM>(new Action<QLSANPHAM>(this.attach_QLSANPHAMs), new Action<QLSANPHAM>(this.detach_QLSANPHAMs));
			this._BAOHANH = default(EntityRef<BAOHANH>);
			this._LOAISANPHAM = default(EntityRef<LOAISANPHAM>);
			this._THUONGHIEU = default(EntityRef<THUONGHIEU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(256)")]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(1024)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="NVarChar(1024)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int NOT NULL")]
		public int Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBaoHanh", DbType="Char(5)")]
		public string MaBaoHanh
		{
			get
			{
				return this._MaBaoHanh;
			}
			set
			{
				if ((this._MaBaoHanh != value))
				{
					if (this._BAOHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBaoHanhChanging(value);
					this.SendPropertyChanging();
					this._MaBaoHanh = value;
					this.SendPropertyChanged("MaBaoHanh");
					this.OnMaBaoHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThuongHieu", DbType="Char(5)")]
		public string MaThuongHieu
		{
			get
			{
				return this._MaThuongHieu;
			}
			set
			{
				if ((this._MaThuongHieu != value))
				{
					if (this._THUONGHIEU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._MaThuongHieu = value;
					this.SendPropertyChanged("MaThuongHieu");
					this.OnMaThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Char(5)")]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LOAISANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_BINHLUAN", Storage="_BINHLUANs", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_GIAMGIA_SANPHAM", Storage="_GIAMGIA_SANPHAMs", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<GIAMGIA_SANPHAM> GIAMGIA_SANPHAMs
		{
			get
			{
				return this._GIAMGIA_SANPHAMs;
			}
			set
			{
				this._GIAMGIA_SANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_HINHANH", Storage="_HINHANHs", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<HINHANH> HINHANHs
		{
			get
			{
				return this._HINHANHs;
			}
			set
			{
				this._HINHANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_QLSANPHAM", Storage="_QLSANPHAMs", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<QLSANPHAM> QLSANPHAMs
		{
			get
			{
				return this._QLSANPHAMs;
			}
			set
			{
				this._QLSANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAOHANH_SANPHAM", Storage="_BAOHANH", ThisKey="MaBaoHanh", OtherKey="MaBaoHanh", IsForeignKey=true)]
		public BAOHANH BAOHANH
		{
			get
			{
				return this._BAOHANH.Entity;
			}
			set
			{
				BAOHANH previousValue = this._BAOHANH.Entity;
				if (((previousValue != value) 
							|| (this._BAOHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAOHANH.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._BAOHANH.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MaBaoHanh = value.MaBaoHanh;
					}
					else
					{
						this._MaBaoHanh = default(string);
					}
					this.SendPropertyChanged("BAOHANH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_LOAISANPHAM", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LOAISANPHAM LOAISANPHAM
		{
			get
			{
				return this._LOAISANPHAM.Entity;
			}
			set
			{
				LOAISANPHAM previousValue = this._LOAISANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAISANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISANPHAM.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAISANPHAM.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("LOAISANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_SANPHAM", Storage="_THUONGHIEU", ThisKey="MaThuongHieu", OtherKey="MaThuongHieu", IsForeignKey=true)]
		public THUONGHIEU THUONGHIEU
		{
			get
			{
				return this._THUONGHIEU.Entity;
			}
			set
			{
				THUONGHIEU previousValue = this._THUONGHIEU.Entity;
				if (((previousValue != value) 
							|| (this._THUONGHIEU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THUONGHIEU.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._THUONGHIEU.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MaThuongHieu = value.MaThuongHieu;
					}
					else
					{
						this._MaThuongHieu = default(string);
					}
					this.SendPropertyChanged("THUONGHIEU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_GIAMGIA_SANPHAMs(GIAMGIA_SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_GIAMGIA_SANPHAMs(GIAMGIA_SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_HINHANHs(HINHANH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_HINHANHs(HINHANH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_QLSANPHAMs(QLSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_QLSANPHAMs(QLSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THUONGHIEU")]
	public partial class THUONGHIEU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThuongHieu;
		
		private string _TenThuongHieu;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThuongHieuChanging(string value);
    partial void OnMaThuongHieuChanged();
    partial void OnTenThuongHieuChanging(string value);
    partial void OnTenThuongHieuChanged();
    #endregion
		
		public THUONGHIEU()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThuongHieu", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThuongHieu
		{
			get
			{
				return this._MaThuongHieu;
			}
			set
			{
				if ((this._MaThuongHieu != value))
				{
					this.OnMaThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._MaThuongHieu = value;
					this.SendPropertyChanged("MaThuongHieu");
					this.OnMaThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThuongHieu", DbType="NVarChar(50)")]
		public string TenThuongHieu
		{
			get
			{
				return this._TenThuongHieu;
			}
			set
			{
				if ((this._TenThuongHieu != value))
				{
					this.OnTenThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._TenThuongHieu = value;
					this.SendPropertyChanged("TenThuongHieu");
					this.OnTenThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUONGHIEU_SANPHAM", Storage="_SANPHAMs", ThisKey="MaThuongHieu", OtherKey="MaThuongHieu")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.THUONGHIEU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRANGTHAI")]
	public partial class TRANGTHAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTrangThai;
		
		private string _TenTrangThai;
		
		private EntitySet<DONHANG> _DONHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTrangThaiChanging(int value);
    partial void OnMaTrangThaiChanged();
    partial void OnTenTrangThaiChanging(string value);
    partial void OnTenTrangThaiChanged();
    #endregion
		
		public TRANGTHAI()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTrangThai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTrangThai
		{
			get
			{
				return this._MaTrangThai;
			}
			set
			{
				if ((this._MaTrangThai != value))
				{
					this.OnMaTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._MaTrangThai = value;
					this.SendPropertyChanged("MaTrangThai");
					this.OnMaTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTrangThai", DbType="NVarChar(15)")]
		public string TenTrangThai
		{
			get
			{
				return this._TenTrangThai;
			}
			set
			{
				if ((this._TenTrangThai != value))
				{
					this.OnTenTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TenTrangThai = value;
					this.SendPropertyChanged("TenTrangThai");
					this.OnTenTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRANGTHAI_DONHANG", Storage="_DONHANGs", ThisKey="MaTrangThai", OtherKey="MaTrangThai")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.TRANGTHAI = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.TRANGTHAI = null;
		}
	}
}
#pragma warning restore 1591
